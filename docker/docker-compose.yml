version: "3.9"
services:
  qdrant:
    image: qdrant/qdrant
    ports: ["6333:6333", "6334:6334"]
    volumes:
      - qdrant_storage:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7
    ports: ["6379:6379"]

  api:
    build:
      context: ..
      dockerfile: docker/api.Dockerfile
    environment:
      QDRANT_URL: http://qdrant:6333
      REDIS_URL: redis://redis:6379/0
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_SERVICE_NAME: rag-api
      RAG_EMBEDDING_MODEL: jinaai/jina-embeddings-v2-small-en
      RAG_RERANKER_MODEL: cross-encoder/ms-marco-MiniLM-L-6-v2
    depends_on:
      qdrant: { condition: service_healthy }
      redis: { condition: service_started }
      otel-collector: { condition: service_started }
    ports: ["8000:8000"]
    volumes:
      - ../src/api:/app/src/api

  worker:
    build:
      context: ..
      dockerfile: docker/worker.Dockerfile
    environment:
      QDRANT_URL: http://qdrant:6333
    depends_on:
      qdrant: { condition: service_healthy }
    volumes:
      - ../src:/app/src

  otel-collector:
    image: otel/opentelemetry-collector:0.104.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    restart: always
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP

  tempo:
    image: grafana/tempo:2.5.0
    command: ["-config.file=/etc/tempo.yaml", "-config.expand-env=true"]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml:ro
      - ./tempo-data:/tmp/tempo
    depends_on:
      - otel-collector
    restart: always
    ports:
      - "3200:3200"   # UI + /metrics

  prometheus:
    image: prom/prometheus:v2.54.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus-data:/prometheus
    depends_on:
      - tempo
    restart: always
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:11.1.0
    depends_on:
      - prometheus
      - tempo
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-data:/var/lib/grafana

volumes:
  qdrant_storage:
